Start checking lemma


Iterating


Node: (0, 5) satisfies lemma. Building bridges.
Trying to build bridge from (0, 5) = 5 to (0, 2) = 6
Updating neighbours on the side of ends: [(0, 2), (0, 5)]
Bridge from (0, 5) = 5 to (0, 2) = 6 built
Affected nodes:
	{'xy': (0, 5), 'value': 5, 'capacity': 4, 'neighbours': [{'node': (0, 2), 'position': 1}, {'node': (2, 5), 'position': 5}], 'is_completed': False, 'position': 2}
	{'xy': (0, 2), 'value': 6, 'capacity': 5, 'neighbours': [{'node': (0, 0), 'position': 0}, {'node': (0, 5), 'position': 2}, {'node': (2, 2), 'position': 4}], 'is_completed': False, 'position': 1}
Bridge:
	{'ends': [(0, 2), (0, 5)], 'val': -1, 'is_hor': True}
============

2.6--5.
.......
5.7..6.
.......
7.7..8.
.......
6.7..6.


Trying to build bridge from (0, 5) = 5 to (2, 5) = 6
Updating neighbours on the side of ends: [(0, 5), (2, 5)]
Bridge from (0, 5) = 5 to (2, 5) = 6 built
Affected nodes:
	{'xy': (0, 5), 'value': 5, 'capacity': 3, 'neighbours': [{'node': (0, 2), 'position': 1}, {'node': (2, 5), 'position': 5}], 'is_completed': False, 'position': 2}
	{'xy': (2, 5), 'value': 6, 'capacity': 5, 'neighbours': [{'node': (2, 2), 'position': 4}, {'node': (0, 5), 'position': 2}, {'node': (4, 5), 'position': 8}], 'is_completed': False, 'position': 5}
Bridge:
	{'ends': [(0, 5), (2, 5)], 'val': -1, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
.......
7.7..8.
.......
6.7..6.


Node: (4, 0) satisfies lemma. Building bridges.
Trying to build bridge from (4, 0) = 7 to (4, 2) = 7
Updating neighbours on the side of ends: [(4, 0), (4, 2)]
Bridge from (4, 0) = 7 to (4, 2) = 7 built
Affected nodes:
	{'xy': (4, 0), 'value': 7, 'capacity': 6, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 0), 'position': 3}, {'node': (6, 0), 'position': 9}], 'is_completed': False, 'position': 6}
	{'xy': (4, 2), 'value': 7, 'capacity': 6, 'neighbours': [{'node': (4, 0), 'position': 6}, {'node': (4, 5), 'position': 8}, {'node': (2, 2), 'position': 4}, {'node': (6, 2), 'position': 10}], 'is_completed': False, 'position': 7}
Bridge:
	{'ends': [(4, 0), (4, 2)], 'val': -1, 'is_hor': True}
============

2.6--5.
.....|.
5.7..6.
.......
7-7..8.
.......
6.7..6.


Trying to build bridge from (4, 0) = 7 to (2, 0) = 5
Updating neighbours on the side of ends: [(2, 0), (4, 0)]
Bridge from (4, 0) = 7 to (2, 0) = 5 built
Affected nodes:
	{'xy': (4, 0), 'value': 7, 'capacity': 5, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 0), 'position': 3}, {'node': (6, 0), 'position': 9}], 'is_completed': False, 'position': 6}
	{'xy': (2, 0), 'value': 5, 'capacity': 4, 'neighbours': [{'node': (2, 2), 'position': 4}, {'node': (0, 0), 'position': 0}, {'node': (4, 0), 'position': 6}], 'is_completed': False, 'position': 3}
Bridge:
	{'ends': [(2, 0), (4, 0)], 'val': -1, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|......
7-7..8.
.......
6.7..6.


Trying to build bridge from (4, 0) = 7 to (6, 0) = 6
Updating neighbours on the side of ends: [(4, 0), (6, 0)]
Bridge from (4, 0) = 7 to (6, 0) = 6 built
Affected nodes:
	{'xy': (4, 0), 'value': 7, 'capacity': 4, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 0), 'position': 3}, {'node': (6, 0), 'position': 9}], 'is_completed': False, 'position': 6}
	{'xy': (6, 0), 'value': 6, 'capacity': 5, 'neighbours': [{'node': (6, 2), 'position': 10}, {'node': (4, 0), 'position': 6}], 'is_completed': False, 'position': 9}
Bridge:
	{'ends': [(4, 0), (6, 0)], 'val': -1, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|......
7-7..8.
|......
6.7..6.


Node: (4, 5) satisfies lemma. Building bridges.
Trying to build bridge from (4, 5) = 8 to (4, 2) = 7
Updating neighbours on the side of ends: [(4, 2), (4, 5)]
Bridge from (4, 5) = 8 to (4, 2) = 7 built
Affected nodes:
	{'xy': (4, 5), 'value': 8, 'capacity': 7, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 5), 'position': 5}, {'node': (6, 5), 'position': 11}], 'is_completed': False, 'position': 8}
	{'xy': (4, 2), 'value': 7, 'capacity': 5, 'neighbours': [{'node': (4, 0), 'position': 6}, {'node': (4, 5), 'position': 8}, {'node': (2, 2), 'position': 4}, {'node': (6, 2), 'position': 10}], 'is_completed': False, 'position': 7}
Bridge:
	{'ends': [(4, 2), (4, 5)], 'val': -1, 'is_hor': True}
============

2.6--5.
.....|.
5.7..6.
|......
7-7--8.
|......
6.7..6.


Trying to build bridge from (4, 5) = 8 to (2, 5) = 6
Updating neighbours on the side of ends: [(2, 5), (4, 5)]
Bridge from (4, 5) = 8 to (2, 5) = 6 built
Affected nodes:
	{'xy': (4, 5), 'value': 8, 'capacity': 6, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 5), 'position': 5}, {'node': (6, 5), 'position': 11}], 'is_completed': False, 'position': 8}
	{'xy': (2, 5), 'value': 6, 'capacity': 4, 'neighbours': [{'node': (2, 2), 'position': 4}, {'node': (0, 5), 'position': 2}, {'node': (4, 5), 'position': 8}], 'is_completed': False, 'position': 5}
Bridge:
	{'ends': [(2, 5), (4, 5)], 'val': -1, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
|......
6.7..6.


Trying to build bridge from (4, 5) = 8 to (6, 5) = 6
Updating neighbours on the side of ends: [(4, 5), (6, 5)]
Bridge from (4, 5) = 8 to (6, 5) = 6 built
Affected nodes:
	{'xy': (4, 5), 'value': 8, 'capacity': 5, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 5), 'position': 5}, {'node': (6, 5), 'position': 11}], 'is_completed': False, 'position': 8}
	{'xy': (6, 5), 'value': 6, 'capacity': 5, 'neighbours': [{'node': (6, 2), 'position': 10}, {'node': (4, 5), 'position': 8}], 'is_completed': False, 'position': 11}
Bridge:
	{'ends': [(4, 5), (6, 5)], 'val': -1, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
|....|.
6.7..6.


Node: (6, 0) satisfies lemma. Building bridges.
Trying to build bridge from (6, 0) = 6 to (6, 2) = 7
Updating neighbours on the side of ends: [(6, 0), (6, 2)]
Bridge from (6, 0) = 6 to (6, 2) = 7 built
Affected nodes:
	{'xy': (6, 0), 'value': 6, 'capacity': 2, 'neighbours': [{'node': (4, 0), 'position': 6}], 'is_completed': False, 'position': 9}
	{'xy': (6, 2), 'value': 7, 'capacity': 4, 'neighbours': [{'node': (6, 5), 'position': 11}, {'node': (4, 2), 'position': 7}], 'is_completed': False, 'position': 10}
Bridge:
	{'ends': [(6, 0), (6, 2)], 'val': -3, 'is_hor': True}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
|....|.
6E7..6.


Node: (6, 2) satisfies lemma. Building bridges.
Trying to build bridge from (6, 2) = 7 to (6, 5) = 6
Updating neighbours on the side of ends: [(6, 2), (6, 5)]
Bridge from (6, 2) = 7 to (6, 5) = 6 built
Affected nodes:
	{'xy': (6, 2), 'value': 7, 'capacity': 3, 'neighbours': [{'node': (6, 5), 'position': 11}, {'node': (4, 2), 'position': 7}], 'is_completed': False, 'position': 10}
	{'xy': (6, 5), 'value': 6, 'capacity': 4, 'neighbours': [{'node': (6, 2), 'position': 10}, {'node': (4, 5), 'position': 8}], 'is_completed': False, 'position': 11}
Bridge:
	{'ends': [(6, 2), (6, 5)], 'val': -1, 'is_hor': True}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
|....|.
6E7--6.


Trying to build bridge from (6, 2) = 7 to (4, 2) = 7
Updating neighbours on the side of ends: [(4, 2), (6, 2)]
Bridge from (6, 2) = 7 to (4, 2) = 7 built
Affected nodes:
	{'xy': (6, 2), 'value': 7, 'capacity': 2, 'neighbours': [{'node': (6, 5), 'position': 11}, {'node': (4, 2), 'position': 7}], 'is_completed': False, 'position': 10}
	{'xy': (4, 2), 'value': 7, 'capacity': 4, 'neighbours': [{'node': (4, 0), 'position': 6}, {'node': (4, 5), 'position': 8}, {'node': (2, 2), 'position': 4}, {'node': (6, 2), 'position': 10}], 'is_completed': False, 'position': 7}
Bridge:
	{'ends': [(4, 2), (6, 2)], 'val': -1, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
|.|..|.
6E7--6.


Node: (6, 5) satisfies lemma. Building bridges.
Trying to build bridge from (6, 5) = 6 to (6, 2) = 7
Updating neighbours on the side of ends: [(6, 2), (6, 5)]
Bridge from (6, 5) = 6 to (6, 2) = 7 built
Affected nodes:
	{'xy': (6, 5), 'value': 6, 'capacity': 2, 'neighbours': [{'node': (4, 5), 'position': 8}], 'is_completed': False, 'position': 11}
	{'xy': (6, 2), 'value': 7, 'capacity': 0, 'neighbours': [], 'is_completed': True, 'position': 10}
Bridge:
	{'ends': [(6, 2), (6, 5)], 'val': -3, 'is_hor': True}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
|.|..|.
6E7EE6.




Iterating


Node: (6, 0) satisfies lemma. Building bridges.
Trying to build bridge from (6, 0) = 6 to (4, 0) = 7
Updating neighbours on the side of ends: [(4, 0), (6, 0)]
======
Adding neighbours back for
	{'xy': (6, 0), 'value': 6, 'capacity': 3, 'neighbours': [{'node': (4, 0), 'position': 6}], 'is_completed': False, 'position': 9}
and
	{'xy': (4, 0), 'value': 7, 'capacity': 5, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 0), 'position': 3}, {'node': (6, 0), 'position': 9}], 'is_completed': False, 'position': 6}
======
Bridge from (6, 0) = 6 to (4, 0) = 7 built
Affected nodes:
	{'xy': (6, 0), 'value': 6, 'capacity': 3, 'neighbours': [{'node': (4, 0), 'position': 6}], 'is_completed': False, 'position': 9}
	{'xy': (4, 0), 'value': 7, 'capacity': 5, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 0), 'position': 3}, {'node': (6, 0), 'position': 9}], 'is_completed': False, 'position': 6}
Bridge:
	{'ends': [(4, 0), (6, 0)], 'val': 0, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
..|..|.
6E7EE6.


Trying to build bridge from (6, 0) = 6 to (4, 0) = 7
Updating neighbours on the side of ends: [(4, 0), (6, 0)]
Bridge from (6, 0) = 6 to (4, 0) = 7 built
Affected nodes:
	{'xy': (6, 0), 'value': 6, 'capacity': 0, 'neighbours': [], 'is_completed': True, 'position': 9}
	{'xy': (4, 0), 'value': 7, 'capacity': 2, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 0), 'position': 3}], 'is_completed': False, 'position': 6}
Bridge:
	{'ends': [(4, 0), (6, 0)], 'val': -3, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
#.|..|.
6E7EE6.


Node: (6, 5) satisfies lemma. Building bridges.
Trying to build bridge from (6, 5) = 6 to (4, 5) = 8
Updating neighbours on the side of ends: [(4, 5), (6, 5)]
======
Adding neighbours back for
	{'xy': (6, 5), 'value': 6, 'capacity': 3, 'neighbours': [{'node': (4, 5), 'position': 8}], 'is_completed': False, 'position': 11}
and
	{'xy': (4, 5), 'value': 8, 'capacity': 6, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 5), 'position': 5}, {'node': (6, 5), 'position': 11}], 'is_completed': False, 'position': 8}
======
Bridge from (6, 5) = 6 to (4, 5) = 8 built
Affected nodes:
	{'xy': (6, 5), 'value': 6, 'capacity': 3, 'neighbours': [{'node': (4, 5), 'position': 8}], 'is_completed': False, 'position': 11}
	{'xy': (4, 5), 'value': 8, 'capacity': 6, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 5), 'position': 5}, {'node': (6, 5), 'position': 11}], 'is_completed': False, 'position': 8}
Bridge:
	{'ends': [(4, 5), (6, 5)], 'val': 0, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
#.|....
6E7EE6.


Trying to build bridge from (6, 5) = 6 to (4, 5) = 8
Updating neighbours on the side of ends: [(4, 5), (6, 5)]
Bridge from (6, 5) = 6 to (4, 5) = 8 built
Affected nodes:
	{'xy': (6, 5), 'value': 6, 'capacity': 0, 'neighbours': [], 'is_completed': True, 'position': 11}
	{'xy': (4, 5), 'value': 8, 'capacity': 3, 'neighbours': [{'node': (4, 2), 'position': 7}, {'node': (2, 5), 'position': 5}], 'is_completed': False, 'position': 8}
Bridge:
	{'ends': [(4, 5), (6, 5)], 'val': -3, 'is_hor': False}
============

2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
#.|..#.
6E7EE6.




Iterating


finished checking lemma
2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
#.|..#.
6E7EE6.

Recursively checking at node index [0] at its [-1]th neighbour
	Node: {'xy': (0, 0), 'value': 2, 'capacity': 2, 'neighbours': [{'node': (0, 2), 'position': 1}, {'node': (2, 0), 'position': 3}], 'is_completed': False, 'position': 0}
2.6--5.
.....|.
5.7..6.
|....|.
7-7--8.
#.|..#.
6E7EE6.
